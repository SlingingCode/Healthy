// <auto-generated />
using Healthy.API.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Healthy.API.Migrations
{
    [DbContext(typeof(HealthyDbContext))]
    [Migration("20180121080132_AddedConstraints_ScaleResult")]
    partial class AddedConstraints_ScaleResult
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Healthy.API.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Healthy.API.Models.ScaleResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("Bmi");

                    b.Property<DateTime>("Date");

                    b.Property<float>("PercentageFat");

                    b.Property<float>("PercentageMuscles");

                    b.Property<int>("PersonId");

                    b.Property<float>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("ScaleResults");
                });

            modelBuilder.Entity("Healthy.API.Models.ScaleResult", b =>
                {
                    b.HasOne("Healthy.API.Models.Person", "Person")
                        .WithMany("ScaleResults")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
